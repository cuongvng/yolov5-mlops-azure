# Continuous Integration (CI) pipeline that orchestrates the deployment of the yolov5 model.

# Runtime parameters to select artifacts
parameters:
- name : artifactBuildId
  displayName: Model Train CI Build ID. Default is 'latest'.
  type: string
  default: 33

pr: none

# Trigger this pipeline on model-train pipeline completion
trigger: none
resources:
  containers:
  - container: mlops
    image: mcr.microsoft.com/azure-dev-cli-apps:latest
  pipelines:
  - pipeline: yolov5-Train-Eval-Reg-pipeline
    source: yolov5-Train-Eval-Reg-pipeline # Name of the triggering pipeline
    trigger:
      branches:
        include:
        - master

variables:
- template: yolov5-variables-template.yml
- group: yolov5-aml-vg
- name: DEPLOYMENT_FILE
  value: "online_deployment.yaml"

stages:
- stage: 'Deploy_Manage_Compute'
  displayName: 'Deploy to AZ ML Managed Endpoint'
  jobs:
  - job: "Deploy_Manage_Compute"
    displayName: "Deploy to AZ ML Managed Endpoint"
    container: mlops
    timeoutInMinutes: 0
    steps:
    - download: none
    - template: yolov5-get-model-id-artifact-template.yml
      parameters:
        projectId: '$(resources.pipeline.yolov5-Train-Eval-Reg-pipeline.projectID)'
        pipelineId: '$(resources.pipeline.yolov5-Train-Eval-Reg-pipeline.pipelineID)'
        artifactBuildId: ${{ parameters.artifactBuildId }}
    - task: AzureCLI@2
      displayName: 'Install AzureML CLI v2'
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptType: 'bash'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)
        inlineScript: 'az extension add -n ml'
    - task: AzureCLI@2
      displayName: "Deploy to AZ ML Managed Endpoint (CLI)"
      condition: variables['ENDPOINT_NAME']
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptType: 'bash'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)/$(SOURCES_DIR_TRAIN)
        inlineScript: |
          set -e # fail on error
          sed -i -e 's/$(MODEL_NAME)/$(MODEL_NAME):$(get_model.MODEL_VERSION)/g' $(DEPLOYMENT_FILE)
          cat $(DEPLOYMENT_FILE)
          # Update az ml deployment
          az ml online-deployment update -f $(DEPLOYMENT_FILE) \
          -e $(ENDPOINT_NAME)  \
          -g $(RESOURCE_GROUP) --workspace-name $(WORKSPACE_NAME) \